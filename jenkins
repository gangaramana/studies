jenkinfile with pipeline
 

   syntax:


     pipeline {
       agent any      
         stages {
            stage() {
               steps {

                }
             }

             stage {
             agent {
              label 'name'
             }
               steps {

               }
             }
          }
      }



* when can also be used in the jenkinsfile
stage('deploy'){
	when{
	 expression{
	   currentBuild.result == 'SUCCESS'
	 }
	}
	steps{
	 sh 'make publish'
	}
}



* if we want to copy the file from stage running on one node to another we can make use of 'stash' command

stash includes: '**/target/*.jar', name: 'app'

and to use them in another agent and in different stage of same pipeline we can unstash them and use them

unstash 'app'
  -- copies all the stashed files into present home directory and we can use them in here in different agent




  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/Bahmni/bahmni-core.git']]])



























  pipeline {
    agent any
    tools {
        maven 'maven-jenkins' 
        }
    stages {
        stage('Example Build') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/Bahmni/bahmni-core.git']]])
            }
        }
        
        stage('Example Deploy') {
             tools {
        maven 'maven-jenkins' 
        }
         stages{
             stage('build'){
                 steps{
                     sh 'mvn clean package'
                 }
             }
         }
           
        }
    }
}